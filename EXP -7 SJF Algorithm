#include <stdio.h>
int main() {
    int n, i, smallest, time = 0, count = 0;
    float avg_wait = 0, avg_turnaround = 0;
    printf("Enter number of processes: ");
    scanf("%d", &n);
    int at[n], bt[n], rt[n], wt[n], tat[n], ct[n];
    for (i = 0; i < n; i++) {
        printf("Enter arrival time of process %d: ", i + 1);
        scanf("%d", &at[i]);
        printf("Enter burst time of process %d: ", i + 1);
        scanf("%d", &bt[i]);
        rt[i] = bt[i];  // remaining time
    }
    int complete = 0;
    while (complete != n) {
        smallest = -1;
        int min = 9999;
        for (i = 0; i < n; i++) {
            if (at[i] <= time && rt[i] > 0 && rt[i] < min) {
                min = rt[i];
                smallest = i;
            }
        }
        if (smallest == -1) {
            time++;
            continue;
        }
        rt[smallest]--;
        time++;
        if (rt[smallest] == 0) {
            complete++;
            ct[smallest] = time;
            tat[smallest] = ct[smallest] - at[smallest];
            wt[smallest] = tat[smallest] - bt[smallest];
            avg_wait += wt[smallest];
            avg_turnaround += tat[smallest];
        }
    }
    printf("\nPID\tAT\tBT\tCT\tTAT\tWT\n");
    for (i = 0; i < n; i++) {
        printf("P%d\t%d\t%d\t%d\t%d\t%d\n", i + 1, at[i], bt[i], ct[i], tat[i], wt[i]);
    }
    printf("\nAverage Waiting Time: %.2f", avg_wait / n);
    printf("\nAverage Turnaround Time: %.2f\n", avg_turnaround / n);
    return 0;
}

SAMPLE INPUT :
Enter number of processes: 3
Enter arrival time of process 1: 0
Enter burst time of process 1: 5
Enter arrival time of process 2: 1
Enter burst time of process 2: 3
Enter arrival time of process 3: 2
Enter burst time of process 3: 1

OUTPUT :
PID     AT    BT    CT    TAT   WT
P1      0     5     9     9     4
P2      1     3     6     5     2
P3      2     1     3     1     0

Average Waiting Time: 2.00  
Average Turnaround Time: 5.00

