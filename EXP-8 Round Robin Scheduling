#include <stdio.h>
int main() {
    int n, i, time = 0, tq, remain;
    printf("Enter total number of processes: ");
    scanf("%d", &n);
    int at[n], bt[n], rt[n], wt[n], tat[n];  
    for (i = 0; i < n; i++) {
        printf("Enter arrival time for process %d: ", i + 1);
        scanf("%d", &at[i]);
        printf("Enter burst time for process %d: ", i + 1);
        scanf("%d", &bt[i]);
        rt[i] = bt[i]; // Remaining time
    }
    printf("Enter time quantum: ");
    scanf("%d", &tq);

    int completed = 0;
    int flag = 0;

    while (completed < n) {
        flag = 0;

        for (i = 0; i < n; i++) {
            if (rt[i] > 0 && at[i] <= time) {
                if (rt[i] > tq) {
                    time += tq;
                    rt[i] -= tq;
                } else {
                    time += rt[i];
                    tat[i] = time - at[i];
                    wt[i] = tat[i] - bt[i];
                    rt[i] = 0;
                    completed++;
                }
                flag = 1;
            }
        }
        if (flag == 0) {
            time++;
        }
    }
    float total_wt = 0, total_tat = 0;
    printf("\nProcess\tAT\tBT\tTAT\tWT\n");
    for (i = 0; i < n; i++) {
        printf("P%d\t%d\t%d\t%d\t%d\n", i + 1, at[i], bt[i], tat[i], wt[i]);
        total_wt += wt[i];
        total_tat += tat[i];
    }
    printf("\nAverage Waiting Time: %.2f", total_wt / n);
    printf("\nAverage Turnaround Time: %.2f\n", total_tat / n);
    return 0;
}

SAMPLE INPUT :
Enter total number of processes: 3
Enter arrival time for process 1: 0
Enter burst time for process 1: 5
Enter arrival time for process 2: 1
Enter burst time for process 2: 4
Enter arrival time for process 3: 2
Enter burst time for process 3: 6
Enter time quantum: 2

OUTPUT :
Process	AT	BT	TAT	WT
P1	    0	   5	10	 5
P2	    1	   4	9	   5
P3	    2	   6	17	11

Average Waiting Time: 7.00  
Average Turnaround Time: 12.00

